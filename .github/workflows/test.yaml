# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Database CI Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  test:
    runs-on: ubuntu-latest
    container: golang:1.20.6-alpine

    services: # service containers to run with `test-job`
      postgres: # label used to access the service container
        image: postgres:latest
        env: # service environment variables
          POSTGRES_DB: postgres_db
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres_user
#        ports: # maps tcp port 5432 on service container to the host
#          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5  
        
    steps:
    - uses: actions/checkout@v3

#    - name: Set up Go
#      uses: actions/setup-go@v4
#      with:
#        go-version: '1.20'

    - name: Test
      run: go test -v ci_test.go
